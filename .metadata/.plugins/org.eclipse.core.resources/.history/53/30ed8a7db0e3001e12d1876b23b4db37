package March;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class B4485_녹색옷을입은애가젤다지_송인범 {
	static int [][] arr;
	static int n;
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		int now=1;
		while(true) {
			n = Integer.parseInt(br.readLine());
			// 종료 조건
			if(n==0) break;
			
			arr = new int[n][n];
			for(int idx=0; idx<n; idx++) {
				st = new StringTokenizer(br.readLine());
				for(int idx2=0; idx2<n; idx2++) {
					arr[idx][idx2] = Integer.parseInt(st.nextToken());
				}
			}
			
			int answer = dp();
			System.out.println("Problem "+now+": "+answer);
			now++;
			
		}
	}
	
	static int dp() {
		int [][] dp = new int [n][n];
		for(int i=0; i<n; i++) {
			Arrays.fill(dp[i], 99999);
		}
		dp[0][0] = arr[0][0]; // 초기화
	
		
		for(int i=0; i<n; i++) {
			for(int j=0; j<n; j++) {
				
				if(i-1>=0) dp[i][j] = Math.min(dp[i][j], dp[i-1][j]+arr[i][j]);
				if(i+1<=n) dp[i][j] = Math.min(dp[i][j], dp[i+1][j]+arr[i][j]);
				if(j+1<=n) dp[i][j] = Math.min(dp[i][j], dp[i][j+1]+arr[i][j]);
				if(j-1>=0) dp[i][j] = Math.min(dp[i][j], dp[i][j-1]+arr[i][j]);
				
			}	
		}
		
		
		System.out.println(Arrays.deepToString(dp));
		return dp[n-1][n-1];
	}

}
